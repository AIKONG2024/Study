from sklearn.metrics import accuracy_score
from sklearn.datasets import load_diabetes
import numpy as np
from sklearn.model_selection import train_test_split, KFold, cross_val_score, StratifiedKFold, cross_val_predict
from sklearn.utils import all_estimators
import warnings
warnings.filterwarnings('ignore')

# 1. 데이터
x, y = load_diabetes(return_X_y=True)

x_train, x_test, y_train , y_test = train_test_split(
    x, y, shuffle= True, random_state=123, train_size=0.8
)

from sklearn.preprocessing import (
    MinMaxScaler,
    StandardScaler,
)
scaler = MinMaxScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

n_splits = 5
kf = KFold(n_splits=n_splits, shuffle=True, random_state=123)

# 모델구성
# allAlgorithms = all_estimators(type_filter='classifier') #41개
allAlgorithms = all_estimators(type_filter='regressor') #55개
best_score = 0
best_model = ""

# 모델구성
from sklearn.metrics import r2_score
for name, algorithm in allAlgorithms :
    try:
        model = algorithm()
        scores = cross_val_score(model, x_train, y_train, cv=kf)
        y_predict = cross_val_predict(model, x_test, y_test, cv=kf)
        r2 = r2_score(y_test, y_predict)
        # 모델
        if best_score < r2:
            best_score = r2
            best_model = name
        # 3. 훈련
        # 평가, 예측
        print(f"""
=========================================================
[{name}]
r2 : {scores} 
평균 r2 : {round(np.mean(scores),4)}
eval r2 : // {r2}
        """)
    except:
        continue
    
print("="*60)
print("[The Best score] : ", best_score )
print("[The Best model] : ", best_model )
print("="*60)

'''
========================================================= 
[ARDRegression]
r2 : [0.53248522 0.4093004  0.39167995 0.38453175 0.53593076]
평균 r2 : 0.4508
eval r2 : // 0.5192415029054672


========================================================= 
[AdaBoostRegressor]
r2 : [0.41206152 0.36537765 0.39002632 0.34577519 0.40659403]
평균 r2 : 0.384
eval r2 : // 0.4005781088404379


========================================================= 
[BaggingRegressor]
r2 : [0.44531272 0.2704622  0.30772778 0.19308339 0.467643  ]
평균 r2 : 0.3368
eval r2 : // 0.4545275850295929


========================================================= 
[BayesianRidge]
r2 : [0.53882654 0.40333181 0.38383314 0.40284934 0.55371505]
평균 r2 : 0.4565
eval r2 : // 0.5296388580676341


========================================================= 
[DecisionTreeRegressor]
r2 : [-0.22421157 -0.27761156 -0.18604841 -0.29670059 -0.32515003]
평균 r2 : -0.2619
eval r2 : // -0.003008839477916636


========================================================= 
[DummyRegressor]
r2 : [-0.01228806 -0.00279372 -0.07441154 -0.00035924 -0.00494246]
평균 r2 : -0.019
eval r2 : // -0.007643954026314681


========================================================= 
[ElasticNet]
r2 : [0.13212591 0.11958489 0.06062053 0.11733154 0.11788085]
평균 r2 : 0.1095
eval r2 : // 0.12049486559839595


========================================================= 
[ElasticNetCV]
r2 : [0.53243983 0.40160505 0.39504738 0.40577589 0.53796865]
평균 r2 : 0.4546
eval r2 : // 0.5276430097630187


========================================================= 
[ExtraTreeRegressor]
r2 : [-0.16087126 -0.25860268 -0.2978888  -0.31778973  0.17196683]
평균 r2 : -0.1726
eval r2 : // -0.045593761062572735


========================================================= 
[ExtraTreesRegressor]
r2 : [0.42130143 0.37674308 0.35792522 0.31880139 0.50989155]
평균 r2 : 0.3969
eval r2 : // 0.46980370274496697


========================================================= 
[GammaRegressor]
r2 : [0.0687644  0.05949732 0.01112826 0.06801928 0.07111201]
평균 r2 : 0.0557
eval r2 : // 0.06994563409343357


========================================================= 
[GaussianProcessRegressor]
r2 : [ -7.70504625  -8.62273812  -8.46664688 -15.15507993 -10.46513952]
평균 r2 : -10.0829
eval r2 : // -2.1124308777455214


========================================================= 
[GradientBoostingRegressor]
r2 : [0.33426482 0.27085541 0.30188713 0.28191855 0.4164368 ]
평균 r2 : 0.3211
eval r2 : // 0.36009043627693804


========================================================= 
[HistGradientBoostingRegressor]
r2 : [0.3087096  0.30185088 0.31257206 0.28148088 0.38693663]
평균 r2 : 0.3183
eval r2 : // 0.45803022185221476


========================================================= 
[HuberRegressor]
r2 : [0.54055797 0.3831944  0.38014389 0.40177259 0.55537361]
평균 r2 : 0.4522
eval r2 : // 0.49864741821948233


========================================================= 
[KNeighborsRegressor]
r2 : [0.37262986 0.3245626  0.23730633 0.28076798 0.50163552]
평균 r2 : 0.3434
eval r2 : // 0.3812472600688376


========================================================= 
[KernelRidge]
r2 : [0.51962449 0.42373383 0.38873524 0.39087277 0.54305851]
평균 r2 : 0.4532
eval r2 : // 0.5378750734429352


========================================================= 
[Lars]
r2 : [ 0.52335766  0.40091801 -1.72666607  0.02986101  0.55999128]
평균 r2 : -0.0425
eval r2 : // 0.47820848672735927


========================================================= 
[LarsCV]
r2 : [0.52525748 0.41343568 0.4050734  0.37915663 0.5247223 ]
평균 r2 : 0.4495
eval r2 : // 0.5322398548081269


========================================================= 
[Lasso]
r2 : [0.51514943 0.40713997 0.4269552  0.37606235 0.49273057]
평균 r2 : 0.4436
eval r2 : // 0.5411657867350671


========================================================= 
[LassoCV]
r2 : [0.53795398 0.40171217 0.38213608 0.39817614 0.55991356]
평균 r2 : 0.456
eval r2 : // 0.5293844385569993


========================================================= 
[LassoLars]
r2 : [0.41646148 0.34543822 0.34666811 0.33181905 0.36287322]
평균 r2 : 0.3607
eval r2 : // 0.5190218407495526


========================================================= 
[LassoLarsCV]
r2 : [0.53714449 0.40091801 0.38268199 0.39532978 0.55999128]
평균 r2 : 0.4552
eval r2 : // 0.5145611576044387


========================================================= 
[LassoLarsIC]
r2 : [0.53842976 0.41069502 0.3866023  0.40826741 0.5373514 ]
평균 r2 : 0.4563
eval r2 : // 0.5101755510717972


========================================================= 
[LinearRegression]
r2 : [0.53714449 0.40091801 0.38268199 0.41172532 0.55999128]
평균 r2 : 0.4585
eval r2 : // 0.5082774807581194


========================================================= 
[LinearSVR]
r2 : [0.08559559 0.11189422 0.26652633 0.09199189 0.10173267]
평균 r2 : 0.1315
eval r2 : // -0.3786806764519799


========================================================= 
[MLPRegressor]
r2 : [-0.50147606 -0.48908549 -0.1190013  -0.95862527 -0.70839142]
평균 r2 : -0.5553
eval r2 : // -2.435861069180607


========================================================= 
[NuSVR]
r2 : [0.09853305 0.10703827 0.05324518 0.10153986 0.10715493]
평균 r2 : 0.0935
eval r2 : // 0.032652062398370596


========================================================= 
[OrthogonalMatchingPursuit]
r2 : [0.32853926 0.30273066 0.36118678 0.27353203 0.33665522]
평균 r2 : 0.3205
eval r2 : // 0.42383405393238693


========================================================= 
[OrthogonalMatchingPursuitCV]
r2 : [0.53232434 0.3999438  0.45804778 0.38587289 0.54231379]
평균 r2 : 0.4637
eval r2 : // 0.5177850921093432


========================================================= 
[PLSRegression]
r2 : [0.53390867 0.41536697 0.34384467 0.41440118 0.56038599]
평균 r2 : 0.4536
eval r2 : // 0.5217130476034346


========================================================= 
[PassiveAggressiveRegressor]
r2 : [0.5475785  0.34055315 0.37933168 0.39191314 0.55341514]
평균 r2 : 0.4426
eval r2 : // 0.5050900177485174


========================================================= 
[PoissonRegressor]
r2 : [0.49819148 0.38305569 0.39435901 0.38680717 0.54709869]
평균 r2 : 0.4419
eval r2 : // 0.46912820384747755


========================================================= 
[QuantileRegressor]
r2 : [-0.08938741 -0.0641245  -0.00856886 -0.02921345 -0.03739493]
평균 r2 : -0.0457
eval r2 : // -0.05777816711688577


========================================================= 
[RANSACRegressor]
r2 : [-0.34247268 -0.25963791 -0.15712231  0.12402865  0.13581987]
평균 r2 : -0.0999
eval r2 : // -0.2646158499178388


========================================================= 
[RadiusNeighborsRegressor]
r2 : [0.18280452 0.109221   0.06283525 0.13533293 0.13719272]
평균 r2 : 0.1255
eval r2 : // 0.07766732221492423


========================================================= 
[RandomForestRegressor]
r2 : [0.38645041 0.35354022 0.36462796 0.31303653 0.42918251]
평균 r2 : 0.3694
eval r2 : // 0.43921040598332495


========================================================= 
[Ridge]
r2 : [0.53812668 0.4034183  0.38749836 0.40468087 0.55055597]
평균 r2 : 0.4569
eval r2 : // 0.5206026225980094


========================================================= 
[RidgeCV]
r2 : [0.53812668 0.4034183  0.38749836 0.40468087 0.55055597]
평균 r2 : 0.4569
eval r2 : // 0.5155293116705175


========================================================= 
[SGDRegressor]
r2 : [0.53310874 0.40630729 0.38813416 0.40934106 0.54501333]
평균 r2 : 0.4564
eval r2 : // 0.5363827098215022


========================================================= 
[SVR]
r2 : [0.06228702 0.04778954 0.12176253 0.08938688 0.09514724]
평균 r2 : 0.0833
eval r2 : // -0.001634298879119811


========================================================= 
[TheilSenRegressor]
r2 : [0.54109937 0.37499849 0.36535137 0.36236154 0.54609692]
평균 r2 : 0.438
eval r2 : // 0.4907043714496795


========================================================= 
[TransformedTargetRegressor]
r2 : [0.53714449 0.40091801 0.38268199 0.41172532 0.55999128]
평균 r2 : 0.4585
eval r2 : // 0.5082774807581194


========================================================= 
[TweedieRegressor]
r2 : [0.07747004 0.0729108  0.009098   0.07301934 0.07089635]
평균 r2 : 0.0607
eval r2 : // 0.0705723510862526

============================================================
[The Best score] :  0.5411657867350671
[The Best model] :  Lasso
============================================================
'''
